version: '3'

services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./stagelite:/stagelite
    command: >
      sh -c "python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py runserver --settings=stagelite.settings 0.0.0.0:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db

  db:
    image: postgres:10-alpine
    env_file:
      - ./.env.dev
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:alpine
  rabbitmq:
    image: rabbitmq:3.7-alpine
  celery:
    restart: always
    build:
      context: .
    command: "cd stagelite && celery -A topics worker -l info"
    volumes:
      - ./stagelite:/stagelite
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - app
  celery_flower:
    restart: always
    build:
      context: .
    command: "cd stagelite && celery -A topics flower"
    volumes:
      - ./stagelite:/stagelite
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - app
      - celery
  frontend:
    build:
      context: .
    command: "cd stagelite/frontend && yarn start"
    # celerybeat:
    #   restart: always
    #   build:
    #     context: .
    #   command: celery -A topics beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    #   volumes:
    #     - ./app:/app
    #   env_file:
    #     - ./.env.dev
    #   depends_on:
    #     - db
    #     - redis
    #     - app
volumes:
  pgdata:
